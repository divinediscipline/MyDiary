{"version":3,"sources":["../../../../server/tests/routes/entries/addEntry.test.js"],"names":["describe","it","done","testEntry","title","description","app","post","send","expect","res","body","newEntry","to","include","entryId","deep","equal","end","err","entries","push","length"],"mappings":";;AAAA;;;;AACA;;AAEA;;;;AACA;;;;;;AAEAA,SAAS,sBAAT,EAAiC,YAAM;AACrCC,KAAG,2BAAH,EAAgC,UAACC,IAAD,EAAU;AACxC,QAAMC,YAAY;AAChBC,aAAO,gBADS;AAEhBC,mBAAa;AAFG,KAAlB;;AAKA,6BAAQC,aAAR,EACGC,IADH,CACQ,iBADR,EAEGC,IAFH,CAEQL,SAFR,EAGGM,MAHH,CAGU,GAHV,EAIGA,MAJH,CAIU,UAACC,GAAD,EAAS;AACf,wBAAOA,IAAIC,IAAJ,CAASC,QAAhB,EAA0BC,EAA1B,CAA6BC,OAA7B,CAAqC,EAAEC,SAAS,CAAX,EAArC;AACA,wBAAOL,IAAIC,IAAJ,CAASC,QAAT,CAAkBR,KAAzB,EAAgCS,EAAhC,CAAmCG,IAAnC,CAAwCC,KAAxC,CAA8Cd,UAAUC,KAAxD;AACA,wBAAOM,IAAIC,IAAJ,CAASC,QAAT,CAAkBP,WAAzB,EAAsCQ,EAAtC,CAAyCG,IAAzC,CAA8CC,KAA9C,CAAoDd,UAAUE,WAA9D;AACD,KARH,EASGa,GATH,CASO,UAACC,GAAD,EAAMT,GAAN,EAAc;AACjB,UAAIS,GAAJ,EAAS;AACP,eAAOjB,KAAKiB,GAAL,CAAP;AACD;AAEF,KAdH;;AAgBAC,0BAAQC,IAAR,CAAalB,SAAb;;AAGA,sBAAOiB,sBAAQE,MAAf,EAAuBT,EAAvB,CAA0BI,KAA1B,CAAgC,CAAhC;AACAf;AACD,GA3BD;;AA8BAD,KAAG,mDAAH,EAAwD,UAACC,IAAD,EAAU;AAChE,6BAAQI,aAAR,EACGC,IADH,CACQ,iBADR,EAEGC,IAFH,GAGGC,MAHH,CAGU,GAHV,EAIGS,GAJH,CAIO,UAACC,GAAD,EAAMT,GAAN,EAAc;AACjB,UAAIS,GAAJ,EAAS;AACP,eAAOjB,KAAKiB,GAAL,CAAP;AACD;AACF,KARH;;AAUA,sBAAOC,sBAAQE,MAAf,EAAuBT,EAAvB,CAA0BI,KAA1B,CAAgC,CAAhC;AACAf;AACD,GAbD;AAcD,CA7CD","file":"addEntry.test.js","sourcesContent":["import request from 'supertest';\r\nimport { expect } from 'chai';\r\n\r\nimport app from '../../../src/app';\r\nimport entries from '../../../data/dataEntries';\r\n\r\ndescribe('POST /api/v1/entries', () => {\r\n  it('should create a new entry', (done) => {\r\n    const testEntry = {\r\n      title: 'Work on sunday',\r\n      description: 'is an audio or visual form of marketing communication that employs an openly.',\r\n    };\r\n\r\n    request(app)\r\n      .post('/api/v1/entries')\r\n      .send(testEntry)\r\n      .expect(200)\r\n      .expect((res) => {\r\n        expect(res.body.newEntry).to.include({ entryId: 3 });\r\n        expect(res.body.newEntry.title).to.deep.equal(testEntry.title);\r\n        expect(res.body.newEntry.description).to.deep.equal(testEntry.description);\r\n      })\r\n      .end((err, res) => {\r\n        if (err) {\r\n          return done(err);\r\n        }\r\n        \r\n      });\r\n\r\n    entries.push(testEntry);\r\n    \r\n\r\n    expect(entries.length).to.equal(3);\r\n    done();\r\n  });\r\n\r\n\r\n  it('should not create a diary entry with invalid data', (done) => {\r\n    request(app)\r\n      .post('/api/v1/entries')\r\n      .send()\r\n      .expect(400)\r\n      .end((err, res) => {\r\n        if (err) {\r\n          return done(err);\r\n        }\r\n      });\r\n\r\n    expect(entries.length).to.equal(4);\r\n    done();\r\n  });\r\n});\r\n"]}