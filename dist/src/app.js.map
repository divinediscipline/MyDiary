{"version":3,"sources":["../../server/src/app.js"],"names":["app","use","bodyParser","json","urlencoded","extended","get","req","res","status","message","v1","entries","id","params","Number","console","log","foundEntry","find","entry","entryId","post","body","title","description","createdAt","push","newEntry","send","put","modifiedEntry","PORT","process","env","listen"],"mappings":"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","file":"app.js","sourcesContent":["import express from 'express';\r\nimport logger from 'morgan';\r\nimport bodyParser from 'body-parser';\r\n\r\nimport entries from '../data/dataEntries';\r\n\r\n// Set up the express app\r\nconst app = express();\r\n\r\n// Log requests to the console.\r\napp.use(logger('dev'));\r\n\r\n// Parse incoming requests data\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\n\r\napp.get('/', (req, res) => res.status(200).json({\r\n  message: 'Welcome to the myDiary API',\r\n  v1: '/api/v1',\r\n}));\r\n\r\napp.get('/v1', (req, res) => res.status(200).json({\r\n  message: 'Welcome to version 1 of the myDiary API',\r\n}));\r\n\r\n// Get all entries\r\napp.get('/api/v1/entries', (req, res) => {\r\n  res.status(200).json(\r\n    {\r\n      entries,\r\n    },\r\n  );\r\n});\r\n\r\n// Get single entry\r\napp.get('/api/v1/entries/:id', (req, res) => {\r\n  const { id } = req.params;\r\n  if (typeof (Number(id)) === 'number') {\r\n    console.log('*****id');\r\n    console.log(typeof (id));\r\n    const foundEntry = entries.find((entry) => {\r\n      return entry.entryId == id;\r\n    });\r\n\r\n    if (foundEntry) {\r\n      res.json(\r\n        {\r\n          foundEntry,\r\n        },\r\n      );\r\n    } else {\r\n      res.status(404).json();\r\n    }\r\n  } else {\r\n    res.status(404).json();\r\n  }\r\n});\r\n\r\n// Create an entry\r\napp.post('/api/v1/entries', (req, res) => {\r\n  if (req.body.title && req.body.description && req.body.entryId && req.body.createdAt) {\r\n    entries.push({\r\n      entryId: req.body.entryId,\r\n      title: req.body.title,\r\n      description: req.body.description,\r\n      createdAt: req.body.createdAt,\r\n    });\r\n    res.status(201).json(\r\n      {\r\n        newEntry: {\r\n          entryId: req.body.entryId,\r\n          title: req.body.title,\r\n          description: req.body.description,\r\n          createdAt: req.body.createdAt,\r\n        },\r\n      },\r\n    );\r\n  } else {\r\n    res.status(400).send();\r\n  }\r\n});\r\n\r\n\r\n// Modify an entry\r\napp.put('/api/v1/entries/:id', (req, res) => {\r\n  if (req.body.title && req.body.description && req.body.entryId && req.body.createdAt) {\r\n    const { id } = req.params;\r\n\r\n    const foundEntry = entries.find((entry) => {\r\n      return entry.entryId == id;\r\n    });\r\n\r\n    if (foundEntry) {\r\n      res.json(\r\n        {\r\n          modifiedEntry: {\r\n            entryId: req.body.entryId,\r\n            title: req.body.title,\r\n            description: req.body.description,\r\n            createdAt: req.body.createdAt,\r\n          },\r\n        },\r\n      );\r\n    } else {\r\n      res.status(404).send();\r\n    }\r\n  } else {\r\n    res.status(400).send();\r\n  }\r\n});\r\n\r\n\r\nconst PORT = process.env.PORT || 5000;\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`app started on port ${PORT}`);\r\n});\r\n\r\nexport default app;\r\n"]}